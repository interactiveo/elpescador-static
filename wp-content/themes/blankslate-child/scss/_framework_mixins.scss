// *****************************************
// MIXINS
// *****************************************


// LISTS
@mixin list($a, $b) {
  li {
    display: list-item;
    list-style-type: $a;
    margin: 0 0 0.63rem 1.1em;
    padding: 0;
    &::marker {
      color: $cta-background;
    }
    ul,ol {
      padding-top: 0.63rem;
      li {
        list-style-type: $b;
      }
    }
  }
}


// ----------------------------------------------
// UL / OL COLS
// ----------------------------------------------
@mixin list-col($a, $b) {
  @include breakpoint($b) {
    column-count: $a;
    li {
      /* autoprefixer: off */
      page-break-inside: avoid;
    }
    li {
      break-inside: avoid;
      max-width: calc(100% - 25px); //fixes ff bug
    }
  }
}//mixin: ul,ol


// TRANSITION
@mixin transition($a:0.3s) {
  transition-property: all;
  transition-timing-function: ease-in-out;
  transition-duration: $a;
}//mixin: transition


// BACKGROUND SIZE, POSITION, REPEAT
@mixin background($a, $b, $c) {
  background-size: $a;
  background-position: $b;
  background-repeat: $c;
}


// OBJECT FIT WRAP
@mixin object-fit-wrap($a, $b) {
  position: absolute;
  inset: 0;
  display: block;
  :is(img,svg,video) {
    width: 100%;
    height: 100%;
    max-width: none;
    max-height: none;
    object-fit: $a;
    object-position: $b;
    user-select: none;
    pointer-events: none;
  }
}


// HR
@mixin hr($a, $b) {
  width: 100%;
  border: none;
  pointer-events: none;
  user-select: none;
  height: $b;
  background: $a;
  display: block;
  border-radius: $b;
  overflow: hidden;
}


// TEXT DECORATION UNDERLINE
@mixin text-decoration-underline($a: null, $b: null, $c: null) {
  text-decoration-thickness: if($a != null, $a, 0.11em); // Default thickness: 0.1em
  text-underline-offset: if($b != null, $b, 0.22em);   // Default offset: 0.2em
  text-decoration-color: if($c != null, $c, inherit);   // Default color: black
}